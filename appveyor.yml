version: 7.6.9.{build}
branches:
  only:
  - monodevelopwin-7.6.9.22
pull_requests:
  do_not_increment_build_number: true
image: Visual Studio 2017
clone_folder: C:\mdw
assembly_info:
  patch: true
  file: 'main\src\core\MonoDevelop.Startup\AssemblyInfo.*'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'
environment:
  PATH: ${ProgramFiles(x86)}\Mono\bin;${ProgramFiles(x86)}\GtkSharp\2.12\bin;${PATH}
  GTK_BASEPATH: ${ProgramFiles(x86)}\GtkSharp\2.1.12\
install:
- ps: "# aktuelles verzeichnis\n$dir = (Get-location).ToString()\n\n$monoBasePath = ${env:ProgramFiles(x86)} + '\\Mono\\';\n$monBinPath = $monoBasePath + 'bin';\n\n$gtksharpPath = ${env:ProgramFiles(x86)} + '\\gtksharp\\';\n\nWrite-host \" \"\nWrite-Host \"Lade Gtk-Sharp herunter...\"\n$targetGtkSharp = $dir + '\\gtk-sharp-2.12.45.msi'\n\n(new-object net.webclient).DownloadFile('https://xamarin.azureedge.net/GTKforWindows/Windows/gtk-sharp-2.12.45.msi', $targetGtkSharp)\n\nWrite-host \" \"\nWrite-Host \"Installiere Gtk-Sharp ...\"\ncmd /c start /wait msiexec /i $targetGtkSharp /quiet /qn /norestart\n\nWrite-host \" \"\nWrite-Host \"Lade Mono-gtk herunter...\"\n$targetMono = $dir + '\\mono-6.12.0.107-gtksharp-2.12.45-win32-0.msi'\n\n(new-object net.webclient).DownloadFile('https://download.mono-project.com/archive/6.12.0/windows-installer/mono-6.12.0.107-gtksharp-2.12.45-win32-0.msi', $targetMono)\n\nWrite-host \" \"\nWrite-Host \"Installiere Mono-gtk ...\"\n\ncmd /c start /wait msiexec /i \"$targetMono\" /quiet /qn /norestart\n\nWrite-host \" \"\nWrite-Host \"Lade MonoLib herunter...\"\n\n$targetMonoLib = $dir + '\\MonoLibraries.msi'\n(new-object net.webclient).DownloadFile('https://files.xamarin.com/~jeremie/MonoLibraries.msi', $targetMonoLib)\n\nWrite-host \" \"\nWrite-Host \"Installiere MonoLib ...\"\n\ncmd /c start /wait msiexec /i \"$targetMonoLib\" /quiet /qn /norestart \n\nWrite-host \" \"\nWrite-Host \"Lade GetText herunter...\"\n$targetGetText = $dir + '\\gettext-0.14.4.exe'\n\n(new-object net.webclient).DownloadFile('https://downloads.sourceforge.net/project/gnuwin32/gettext/0.14.4/gettext-0.14.4.exe?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fgnuwin32%2Ffiles%2Fgettext%2F0.14.4%2Fgettext-0.14.4.exe%2Fdownload%3Fuse_mirror%3Ddeac-riga%26download%3D&ts=1608399707', $targetGetText)\n\nWrite-host \" \"\nWrite-Host \"Installiere MonoLib ...\"\ncmd /c start /wait msiexec /i \"$targetGetText\" /quiet /qn /norestart \n\n#Write-host \" \"\n#Write-Host \"Lade MonoDoc herunter...\"\n#$targetMonoDoc = $dir + '\\monodoc.dll'\n\n#(new-object net.webclient).DownloadFile('https://github.com/lextm/monodevelop-windows/blob/master/monodoc.dll', $targetMonoDoc)\n# & 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe' /nologo /i $targetMonoDoc\n\nWrite-host \" \"\n\nif(Test-Path \"$monBinPath\") {\n    Write-host \"Mono installed\" -ForegroundColor Green\n}\n\nWrite-host \" \"\n$monoExe = $monBinPath+\"mono.exe\"\n& 'C:\\Program Files (x86)\\Mono\\bin\\mono.exe' --version\nWrite-host \" \"\n\n$WindowsSDK = 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe'\nWrite-host \"Suche nach gacutil\"\nWrite-host \" \"\n\nif (Test-Path -Path \"$WindowsSDK\")\n{\n    Write-host \"Wurde gefunden...\" -ForegroundColor Green\n    Write-host \"\"\n    Write-host \"Installiere Bibliotheken im GAC\"\n    Write-host \"\"\n    Write-host \"Gtk+ Bibliotheken werden registriert\"\n    Write-host \"\"\n    $pfad = $gtksharpPath + '2.12\\lib\\gtk-sharp-2.0\\*.dll'\n    $list = (get-childitem -Path $pfad -Recurse)\n    foreach ($item in $list)\n    {\n        $name = $item.Name\n        write-host \"$name\"\n        & 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe' /nologo /i $item\n    }\n\n    Write-host \"Mono.Cairo Bibliotheken werden registriert\"\n    Write-host \"\"\n\n    $pfad = $gtksharpPath + '2.12\\lib\\mono.cairo\\*.dll'\n    $list = (get-childitem -Path $pfad -Recurse)\n    foreach ($item in $list)\n    {\n        $name = $item.Name\n        write-host \"$name\"\n        & 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe' /nologo /i $item\n    }\n\n    Write-host \"Mono.Posix Bibliotheken werden registriert\"\n    Write-host \"\"\n\n    $pfad = $gtksharpPath + '2.12\\lib\\mono.posix\\*.dll'\n    $list = (get-childitem -Path $pfad -Recurse)\n    foreach ($item in $list)\n    {\n        $name = $item.Name\n        write-host \"$name\"\n        & 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe' /nologo /i $item\n    }\n\n    #$pfad = $monoBasePath + '\\lib\\atk\\atk-sharp.dll'\n    #& 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe' /nologo /i $pfad\n\n    Write-host \"Mono Bibliotheken werden registriert\"\n    Write-host \"\"\n\n    $pfad = $monoBasePath + '\\lib\\cairo\\*.dll'\n    $list = (get-childitem -Path $pfad -Recurse)\n    foreach ($item in $list)\n    {\n        $name = $item.Name\n        write-host \"$name\"\n        & 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe' /nologo /i $item\n    }\n\n    $pfad = $monoBasePath + '\\lib\\gdk\\*.dll'\n    $list = (get-childitem -Path $pfad -Recurse)\n    foreach ($item in $list)\n    {\n        $name = $item.Name\n        write-host \"$name\"\n        & 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe' /nologo /i $item\n    }\n\n    $pfad = $monoBasePath + '\\lib\\glade\\*.dll'\n    $list = (get-childitem -Path $pfad -Recurse)\n    foreach ($item in $list)\n    {\n        $name = $item.Name\n        write-host \"$name\"\n        & 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe' /nologo /i $item\n    }\n\n    $pfad = $monoBasePath + '\\lib\\glib\\*.dll'\n    $list = (get-childitem -Path $pfad -Recurse)\n    foreach ($item in $list)\n    {\n        $name = $item.Name\n        write-host \"$name\"\n        & 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe' /nologo /i $item\n    }\n\n    $pfad = $monoBasePath + '\\lib\\gtk\\*.dll'\n    $list = (get-childitem -Path $pfad -Recurse)\n    foreach ($item in $list)\n    {\n        $name = $item.Name\n        write-host \"$name\"\n        & 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe' /nologo /i $item\n    }\n\n    $pfad = $monoBasePath + '\\lib\\gtk-dotnet\\*.dll'\n    $list = (get-childitem -Path $pfad -Recurse)\n    foreach ($item in $list)\n    {\n        $name = $item.Name\n        write-host \"$name\"\n        & 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe' /nologo /i $item\n    } \n\n    $pfad = $monoBasePath + '\\lib\\pango\\*.dll'\n    $list = (get-childitem -Path $pfad -Recurse)\n    foreach ($item in $list)\n    {\n        $name = $item.Name\n        write-host \"$name\"\n        & 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe' /nologo /i $item\n    }\n\n    write-host \"mono.posix\"\n    $pfad = $monoBasePath + '\\lib\\mono\\4.5\\mono.posix.dll'\n    & 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe' /nologo /i $pfad \n\n    write-host \"mono.cairo\"\n    $pfad = $monoBasePath + '\\lib\\mono\\4.5\\mono.cairo.dll'\n    & 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe' /nologo /i $pfad\n    \n    write-host \"monodoc\"\n    $pfad = $monoBasePath + '\\lib\\mono\\monodoc\\monodoc.dll'\n    & 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe' /nologo /i $pfad \n}\nelse\n{\n    Write-host \"Konnte nicht gefunden werden, installieren Sie das Windows 10 SDK!\" -ForegroundColor Red\n\n    throw \"No Windows 10 SDK\"\n}"
build_script:
- cmd: >-
    cd main

    winbuild.bat
artifacts:
- path: setup\MonoDevelop\bin\Debug
test: off